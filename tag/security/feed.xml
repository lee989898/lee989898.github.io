<?xml version="1.0" encoding="utf-8"?>

<feed xmlns="http://www.w3.org/2005/Atom" >
  <generator uri="https://jekyllrb.com/" version="3.9.0">Jekyll</generator>
  <link href="https://lee989898.github.io/tag/security/feed.xml" rel="self" type="application/atom+xml" />
  <link href="https://lee989898.github.io/" rel="alternate" type="text/html" />
  <updated>2022-01-30T23:53:01+09:00</updated>
  <id>https://lee989898.github.io/tag/security/feed.xml</id>

  
  
  

  
    <title type="html">LEE | </title>
  

  
    <subtitle>공부 블로그</subtitle>
  

  

  
    
      
    
  

  
  

  
    <entry>
      <title type="html">__SSL/TLS__</title>
      <link href="https://lee989898.github.io/sc-20" rel="alternate" type="text/html" title="__SSL/TLS__" />
      <published>2021-12-03T01:06:00+09:00</published>
      <updated>2021-12-03T01:06:00+09:00</updated>
      <id>https://lee989898.github.io/sc-20</id>
      <content type="html" xml:base="https://lee989898.github.io/sc-20">&lt;h3 id=&quot;ssltls&quot;&gt;&lt;strong&gt;SSL/TLS&lt;/strong&gt;&lt;/h3&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
  &lt;p&gt;Secure sockets layer (SSL)​&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;1996, Netscape​&lt;/li&gt;
  &lt;li&gt;1999, TLS로​&lt;/li&gt;
  &lt;li&gt;웹기반 전자상거래를 위해 TCP layer에서 메시지와 무결성과 비밀성 제공​&lt;/li&gt;
  &lt;li&gt;Web-server와 web-browser간 보안​&lt;/li&gt;
  &lt;li&gt;HTTPS – 현재 대부분 서버에서 사용​&lt;/li&gt;
  &lt;li&gt;Handshake (암호spec, session관리), record (암호,무결성등 보안서비스) protocols로 나뉜다​&lt;/li&gt;
  &lt;li&gt;인증수행-&amp;gt;세션키분배-&amp;gt;암호화 메시지 송수신 순서​&lt;/li&gt;
  &lt;li&gt;지원하는 보안서비스 ​
    &lt;ul&gt;
      &lt;li&gt;Server/client authentication, confidentiality, integrity&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;부인방지기능은 제공안됨 – 전자서명 사용해야​&lt;/li&gt;
  &lt;li&gt;단순히 web-server와 web-browser간의 모든 data를 암호화하면 안전? No, replay attack (관찰된 통신내용을 동일하게 재생하면 같은 결과를 얻을 수 있다.)&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;Secure sockets layer (SSL) 표준​&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;User authentication​&lt;/li&gt;
  &lt;li&gt;Confidentiality​&lt;/li&gt;
  &lt;li&gt;Integrity​
​
&lt;img src=&quot;/assets/built/images/sc/sc31.png&quot; width=&quot;50%&quot; height=&quot;25%&quot; title=&quot;제목&quot; alt=&quot;컴퓨터보안&quot; /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;TLS/SSL Protocol 구성​&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;Handshake protocol​
    &lt;ul&gt;
      &lt;li&gt;Client, server 간 인증, 암호 알고리즘 합의, 키교환 등 수행​&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Record protocol​
    &lt;ul&gt;
      &lt;li&gt;데이터를 인증, 암호화처리하고 메시지 송수신​&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Change cipher spec​
    &lt;ul&gt;
      &lt;li&gt;암호 spec을 변경담당​&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Alter protocol​
    &lt;ul&gt;
      &lt;li&gt;에러처리​&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;Handshake Protocol&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;핸드셰이크는 서버를 확인하고 데이터가 전송되기 전에 클라이언트와 서버가 암호화 세트에 동의하도록 한다&lt;/li&gt;
  &lt;li&gt;Record protocol의 의한 data송수신보다 먼저 수행되어 다음의 session정보를 생성, 관리​
    &lt;ul&gt;
      &lt;li&gt;Session ID​&lt;/li&gt;
      &lt;li&gt;Certification​&lt;/li&gt;
      &lt;li&gt;Cipher spec: 압축, MAC algorithm​&lt;/li&gt;
      &lt;li&gt;Compression method: 암호화 이전 압축 algorithm​&lt;/li&gt;
      &lt;li&gt;Master secret key: 48bit&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;Handshake Protocol&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;3개의 필드로 이루어진 메시지 교환
    &lt;ul&gt;
      &lt;li&gt;type: 메시지 종류 명시&lt;/li&gt;
      &lt;li&gt;length: 메시지 길이&lt;/li&gt;
      &lt;li&gt;content: 메시지 종류에 따른 값들&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;4단계 진행
    &lt;ul&gt;
      &lt;li&gt;1단계: Security capability establish​&lt;/li&gt;
      &lt;li&gt;2단계: Server authentication &amp;amp; key exchange​&lt;/li&gt;
      &lt;li&gt;3단계: Client authentication &amp;amp; key exchange​&lt;/li&gt;
      &lt;li&gt;4단계: Change cipher specs​&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/built/images/sc/sc32.png&quot; width=&quot;50%&quot; height=&quot;25%&quot; title=&quot;제목&quot; alt=&quot;컴퓨터보안&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;1단계: Security capability establish​
    &lt;ul&gt;
      &lt;li&gt;1~3​&lt;/li&gt;
      &lt;li&gt;Hello 메시지 교환으로 session ID, 키교환알고리즘, 인증 알고리즘, 암호알고리즘, 압축 알고리즘 결정&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Server authentication &amp;amp; key exchange​
    &lt;ul&gt;
      &lt;li&gt;4~6​&lt;/li&gt;
      &lt;li&gt;4: 서버의 인증서와 검증위한 인증서체인, 공개키전송​&lt;/li&gt;
      &lt;li&gt;5: client 인증서 요구(opt)​&lt;/li&gt;
      &lt;li&gt;6: 2단계 종료메시지&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;3단계: Client authentication &amp;amp; key exchange​
    &lt;ul&gt;
      &lt;li&gt;7~9​&lt;/li&gt;
      &lt;li&gt;7: client 인증서전송​&lt;/li&gt;
      &lt;li&gt;8: 48byte premaster secrete 전송​&lt;/li&gt;
      &lt;li&gt;9: client 인증서 검증&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;4단계: Change cipher specs​
    &lt;ul&gt;
      &lt;li&gt;10~11​&lt;/li&gt;
      &lt;li&gt;암호사양변경 메시지 교환을 통해 다음 세션에 적용될 암호 spec 결정&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;Record Protocol&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;메시지를 최대 16KB 단위로 fragment​&lt;/li&gt;
  &lt;li&gt;MAC 사용&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/built/images/sc/sc33.png&quot; width=&quot;50%&quot; height=&quot;25%&quot; title=&quot;제목&quot; alt=&quot;컴퓨터보안&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;1: 메시지를 최대 16KB 단위로 fragment​&lt;/li&gt;
  &lt;li&gt;2: 압축 (opt)​&lt;/li&gt;
  &lt;li&gt;3: MAC 추가​&lt;/li&gt;
  &lt;li&gt;4: Encryption​&lt;/li&gt;
  &lt;li&gt;5: SSL reacord header 추가&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;Changes from SSL 3.0 to TLS&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;Transport Layer Security [RFC2246]​&lt;/li&gt;
  &lt;li&gt;Additional Alerts added​&lt;/li&gt;
  &lt;li&gt;Modification to hash calculations​&lt;/li&gt;
  &lt;li&gt;Protocol version 3.1 in ClientHello, ServerHello&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;</content>

      
      
      
      
      

      <author>
          <name>lee989898</name>
        
        
      </author>

      

      
        <category term="security" />
      

      
        <summary type="html">SSL/TLS</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">__IPSEC__</title>
      <link href="https://lee989898.github.io/sc-21" rel="alternate" type="text/html" title="__IPSEC__" />
      <published>2021-12-03T01:06:00+09:00</published>
      <updated>2021-12-03T01:06:00+09:00</updated>
      <id>https://lee989898.github.io/sc-21</id>
      <content type="html" xml:base="https://lee989898.github.io/sc-21">&lt;h3 id=&quot;ipsec&quot;&gt;&lt;strong&gt;IPSEC&lt;/strong&gt;&lt;/h3&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
  &lt;p&gt;IPSEC&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;IP 주소 위장 방지(출발지 인증)​&lt;/li&gt;
  &lt;li&gt;IP 데이터그램의 변경 및 재전송 방지​&lt;/li&gt;
  &lt;li&gt;IP 데이터 그램을 위한 기밀성, 무결성 제공​&lt;/li&gt;
  &lt;li&gt;보안  프로토콜 선택(시스템들이 필요로 하는)​&lt;/li&gt;
  &lt;li&gt;암호 알고리즘 선택(선택된 프로토콜에서 사용되도록)​&lt;/li&gt;
  &lt;li&gt;암호키 생성,분배(요청된 서비스의 제공에 필요) ​&lt;/li&gt;
  &lt;li&gt;Application​
    &lt;ul&gt;
      &lt;li&gt;VPN (virtual Private Network): 가상 전용회선​&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;IPSEC 구성&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;IPsec AH(인증 헤더) 프로토콜​
    &lt;ul&gt;
      &lt;li&gt;데이터 근원 인증,비연결형 무결성 제공 ​&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;캡슐화 보안페이로드 (ESP ) – 데이터기밀성, 제한된 트래칙 흐름 기밀성, 비연결형 무결성, 데이터 근원인증, 재전송공격 방지 제공​&lt;/li&gt;
  &lt;li&gt;IKE 프로토콜 ​
    &lt;ul&gt;
      &lt;li&gt;통신당사자간 키관리 프로토콜​&lt;/li&gt;
      &lt;li&gt;암호알고리즘 선택협상, 키분배 위해 사용​&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;Transport and Tunnel Modes&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;/assets/built/images/sc/sc34.png&quot; width=&quot;50%&quot; height=&quot;25%&quot; title=&quot;제목&quot; alt=&quot;컴퓨터보안&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Transport mode​
    &lt;ul&gt;
      &lt;li&gt;End to end between hosts​&lt;/li&gt;
      &lt;li&gt;관련 hosts들이 IPSec을 지원해야​&lt;/li&gt;
      &lt;li&gt;IP 상위 프로토콜 (TCP, Application) 안전하게 전송​&lt;/li&gt;
      &lt;li&gt;IP header에 IPSec header정보 추가​&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/built/images/sc/sc35.png&quot; width=&quot;50%&quot; height=&quot;25%&quot; title=&quot;제목&quot; alt=&quot;컴퓨터보안&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Tunnel mode​
    &lt;ul&gt;
      &lt;li&gt;터널내의 모든 IP 트래픽 보호​&lt;/li&gt;
      &lt;li&gt;터널의 시작,종류 지점에 IPSec gateway​&lt;/li&gt;
      &lt;li&gt;터널 시작 gateway에서 새 IP header와 Ipsec header 추가하고, 종료 gateway에서 제거​&lt;/li&gt;
      &lt;li&gt;라우터가 내부 패킷을 검사하지 않음&lt;/li&gt;
      &lt;li&gt;소스 및 목적지 주소가 다를 수 있음&lt;/li&gt;
      &lt;li&gt;방화벽에서 구현 가능&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;</content>

      
      
      
      
      

      <author>
          <name>lee989898</name>
        
        
      </author>

      

      
        <category term="security" />
      

      
        <summary type="html">IPSEC</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">__Kerberos​__</title>
      <link href="https://lee989898.github.io/sc-18" rel="alternate" type="text/html" title="__Kerberos​__" />
      <published>2021-12-01T01:06:00+09:00</published>
      <updated>2021-12-01T01:06:00+09:00</updated>
      <id>https://lee989898.github.io/sc-18</id>
      <content type="html" xml:base="https://lee989898.github.io/sc-18">&lt;h3 id=&quot;kerberos&quot;&gt;&lt;strong&gt;Kerberos​&lt;/strong&gt;&lt;/h3&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
  &lt;p&gt;Kerberos?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;Symmetric key 기반 분산 인증 시스템​&lt;/li&gt;
  &lt;li&gt;사용자가 서버의 서비스에 액세스하려는 경우 (예, 프린터서버, 네트워크 디스크 등)​&lt;/li&gt;
  &lt;li&gt;세 가지 위협 존재:​
    &lt;ul&gt;
      &lt;li&gt;사용자가 다른 사용자로 가장​&lt;/li&gt;
      &lt;li&gt;사용자가 워크스테이션의 네트워크 주소를 변경&lt;/li&gt;
      &lt;li&gt;사용자는 교환을 도청하고 재생 공격을 사용​&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Client들이 원격으로 서버에 자원, 서비스 요청시마다 인증반복​&lt;/li&gt;
  &lt;li&gt;매번 passwd 입력 안해도 되며, 각 서버가 사용자들의 비번을 저장할 필요없다​&lt;/li&gt;
  &lt;li&gt;경쟁자: SSL&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;​Kerberos Design 요구사항​&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;사용자는 워크스테이션 세션(로그인 세션)이 시작될 때 한 번 자신을 식별해야 한다&lt;/li&gt;
  &lt;li&gt;암호는 네트워크를 통해 일반 텍스트로 전송되지 않습니다(또는 메모리에 저장)&lt;/li&gt;
  &lt;li&gt;각 서버가 사용자들의 비번을 저장할 필요없어야 ​함&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;System Components​&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;Server, User​&lt;/li&gt;
  &lt;li&gt;AS(Authentication Server)​
    &lt;ul&gt;
      &lt;li&gt;모든 user/server 들의 password 안다​&lt;/li&gt;
      &lt;li&gt;TGS 에 제시할 ticket 발급​&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;TGS(Ticket Granting Server)​
    &lt;ul&gt;
      &lt;li&gt;서버는 ticket만 받는다​&lt;/li&gt;
      &lt;li&gt;서비스 요청시, 한 user는 한 server에 한 ticket제시​&lt;/li&gt;
      &lt;li&gt;Server에 제시할 ticket 발급역할​&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;시스템 구성도&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;/assets/built/images/sc/sc28.png&quot; width=&quot;50%&quot; height=&quot;25%&quot; title=&quot;제목&quot; alt=&quot;컴퓨터보안&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Protocol​&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;User/TGS는 AS에, server는 TGS에 등록(passwd)되어 있다  (or PKI사용)​&lt;/li&gt;
  &lt;li&gt;User가 서비스 필요​&lt;/li&gt;
  &lt;li&gt;서비스 제공할 server 찾는다​&lt;/li&gt;
  &lt;li&gt;해당 server 관리하는 TGS 찾는다​&lt;/li&gt;
  &lt;li&gt;AS에 TGS에 보낼 ticket요청&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
  &lt;li&gt;User는 AS에게  UserID, TGS이름을 $K_{user-AS}$로 암호화하여 보낸다&lt;/li&gt;
  &lt;li&gt;AS는 User와 TGS간의 통신을 위한 세션키1 $K_{user-TGS}$ 를 생성​ 세션키1, UserID 를 $K_{AS-TGS}$로 암호화하여 User에게 발급할 Ticket을 생성​ 세션키1과 Ticket을 $K_{user-AS}$로 암호화하여 보낸다​&lt;/li&gt;
  &lt;li&gt;받은 2를 $K_{user-AS}$복호화해서 세션키1 $K_{user-TGS}$ 와 Ticket을 얻는다. ​UserID를 세션키1로 암호화해서 Ticket과 함께 TGS로 보낸다​&lt;/li&gt;
  &lt;li&gt;받은 3을 $K_{user-TGS}$와 $K_{AS-TGS}$ 로 복호화해서 User정보와 요구내용 확인, ​TGS는 User와 Server간의 통신을 위한 세션키2 $K_{user-server}$ 생성 ​세션키2, UserID 를 $K_{TGS-server}$로 암호화하여 User에게 발급할 Ticket을 생성​ 세션키2와 Ticket을 $K_{user-TGS}$로 암호화하여 보낸다​&lt;/li&gt;
  &lt;li&gt;받은 4를 $K_{user-TGS}$로 복호화해서 세션키2 $K_{user-server}$와 Ticket(user, Server)를 얻는다. Server에게 $K_{user-server}$로 암호화한 UserID와 Ticket을 전송한다​&lt;/li&gt;
  &lt;li&gt;Server는 받는 5의 Ticket을 $K_{TGS-server}$로 복호화 하여 세션키2 $K_{user-server}$을 얻는다. 이걸로 UserID를 복호화해서  사용자확인을 한다.​&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
  &lt;p&gt;Drawbacks of Kerberos&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;단일 실패 지점: 중앙 서버의 지속적인 가용성이 필요. Kerberos 서버가 다운되면 아무도 로그인할 수 없다&lt;/li&gt;
  &lt;li&gt;Kerberos에는 엄격한 시간 요구 사항이 있으므로 관련된 호스트의 시계가 구성된 제한 내에서 동기화되어야 함&lt;/li&gt;
  &lt;li&gt;관리 프로토콜은 표준화되지 않았으며 서버 구현에 따라 다르다&lt;/li&gt;
  &lt;li&gt;모든 인증은 중앙 집중식 KDC에 의해 제어되므로 이 인증 인프라가 손상되면 공격자가 모든 사용자를 가장할 수 있음&lt;/li&gt;
  &lt;li&gt;다른 호스트 이름이 필요한 각 네트워크 서비스에는 고유한 Kerberos 키 세트가 필요합니다. 이는 가상 호스팅 및 클러스터를 복잡하게 만든다&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;</content>

      
      
      
      
      

      <author>
          <name>lee989898</name>
        
        
      </author>

      

      
        <category term="security" />
      

      
        <summary type="html">Kerberos​</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">__Dos​__</title>
      <link href="https://lee989898.github.io/sc-19" rel="alternate" type="text/html" title="__Dos​__" />
      <published>2021-12-01T01:06:00+09:00</published>
      <updated>2021-12-01T01:06:00+09:00</updated>
      <id>https://lee989898.github.io/sc-19</id>
      <content type="html" xml:base="https://lee989898.github.io/sc-19">&lt;h3 id=&quot;dos&quot;&gt;&lt;strong&gt;Dos​&lt;/strong&gt;&lt;/h3&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
  &lt;p&gt;Dos (Denial of Service)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;서비스 거부​&lt;/li&gt;
  &lt;li&gt;시스템 자원(cpu, memory, network, storage 등)을 고갈시켜 정상적인 접근에 대한 서비스를 제공할 수 없도록 만드는 행위​&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;Dos attack type​&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;Error trigger Dos attack​&lt;/li&gt;
  &lt;li&gt;OS,application의 약점에 attack packet 전송해서 system error 유발 (slammer worm)​&lt;/li&gt;
  &lt;li&gt;Ping of death, Land, Teardrop​&lt;/li&gt;
  &lt;li&gt;Flooding Dos attack​&lt;/li&gt;
  &lt;li&gt;packet, traffic을 과중하게 발생하여 server, network resource 고갈​&lt;/li&gt;
  &lt;li&gt;TCP syn flooding​&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;TCP syn flooding​&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;TCP 3-way handshaking의 취약점 이용​&lt;/li&gt;
  &lt;li&gt;공격자가 src IP 주소를 위조해서 TCP SYN를  동시에 대량전송​&lt;/li&gt;
  &lt;li&gt;서버는 TCP ACK를 보내고, 자원할당 후 응답 기다림​&lt;/li&gt;
  &lt;li&gt;정상적인 접근방해+엉뚱한 피해자​&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/built/images/sc/sc29.png&quot; width=&quot;50%&quot; height=&quot;25%&quot; title=&quot;제목&quot; alt=&quot;컴퓨터보안&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;DDoS Attack​&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;Distributed Denial of Service​&lt;/li&gt;
  &lt;li&gt;다수의 pc가 동시에 Dos 공격​&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;BotNet?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;Bot(=zombie): 악성sw에 감염되어 자신도 모르게 해커의 조종을 받는 컴퓨터​&lt;/li&gt;
  &lt;li&gt;BotNet: 명령제어서버(C&amp;amp;C,command and control)를 통해 원격제어되는 악성코드에 감염된 컴퓨터(bot)들의 네트워크 ​&lt;/li&gt;
  &lt;li&gt;대부분 사어버테러의 주요 원인&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/built/images/sc/sc30.png&quot; width=&quot;50%&quot; height=&quot;25%&quot; title=&quot;제목&quot; alt=&quot;컴퓨터보안&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;DDos 종류&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;Standard DoS: 알려진 취약점 집중공격​&lt;/li&gt;
  &lt;li&gt;Tool을 이용한 DoS: TFN, TFN2K, Trinoo, Loki, Stacheldraht, Jolt, Land, teardrop…​&lt;/li&gt;
  &lt;li&gt;Traffic anomalie 공격: bandwidth점유, ICMP, TCP, UDP flooding​&lt;/li&gt;
  &lt;li&gt;Spoofed SYN flooding: spoof된 source IP로 TCP syn보냄​&lt;/li&gt;
  &lt;li&gt;Connection Per Second(CPS) flood: zombie로 부터 connection flooding​&lt;/li&gt;
  &lt;li&gt;Established Connection flood: zombie로 부터 established connection flood​&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;Why DDos?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;Simple​&lt;/li&gt;
  &lt;li&gt;Easy: just use tools​&lt;/li&gt;
  &lt;li&gt;Effective​&lt;/li&gt;
  &lt;li&gt;공격자추적이 어렵다​&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;​&lt;/p&gt;

&lt;hr /&gt;</content>

      
      
      
      
      

      <author>
          <name>lee989898</name>
        
        
      </author>

      

      
        <category term="security" />
      

      
        <summary type="html">Dos​</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">__방화벽__</title>
      <link href="https://lee989898.github.io/sc-17" rel="alternate" type="text/html" title="__방화벽__" />
      <published>2021-11-24T01:06:00+09:00</published>
      <updated>2021-11-24T01:06:00+09:00</updated>
      <id>https://lee989898.github.io/sc-17</id>
      <content type="html" xml:base="https://lee989898.github.io/sc-17">&lt;h3 id=&quot;방화벽&quot;&gt;&lt;strong&gt;방화벽&lt;/strong&gt;&lt;/h3&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
  &lt;p&gt;Firewalls?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;조직의 내부망을 외부 인터넷과 격리시켜 일부 패킷은 통과시키고 나머지는 차단하는 HW와 SW의 조합&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/built/images/sc/sc24.png&quot; width=&quot;50%&quot; height=&quot;25%&quot; title=&quot;제목&quot; alt=&quot;컴퓨터보안&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Firewall 서비스&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;Traffic monitoring​&lt;/li&gt;
  &lt;li&gt;Traffic control​&lt;/li&gt;
  &lt;li&gt;NAT – 내부 network 보호​&lt;/li&gt;
  &lt;li&gt;VPN – 내부 traffic 노출차단&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;Firewalls을 쓰는 이유&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;서비스 거부 공격 방지:
    &lt;ul&gt;
      &lt;li&gt;SYN 플러딩: 공격자가 많은 가짜 TCP 연결을 설정하고 “실제” 연결을 위한 리소스가 남지 않음&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;내부 데이터의 불법적인 수정/접근을 방지한다
    &lt;ul&gt;
      &lt;li&gt;예: 공격자가 CIA의 홈페이지를 다른 것으로 교체&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;내부 네트워크(인증된 사용자/호스트 집합)에 대한 승인된 액세스만 허용&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;Firewall types&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ol&gt;
  &lt;li&gt;Stateless packet filter​&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
  &lt;li&gt;지나는 packet에 대해 미리 정의된 규칙에 따라 pass/block 결정​&lt;/li&gt;
  &lt;li&gt;Packet의 다음 정보를 기반으로 결정​
    &lt;ul&gt;
      &lt;li&gt;source IP address, destination IP address​&lt;/li&gt;
      &lt;li&gt;TCP/UDP source and destination port numbers​&lt;/li&gt;
      &lt;li&gt;ICMP message type​&lt;/li&gt;
      &lt;li&gt;TCP SYN and ACK bits​&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;example 1: block incoming and outgoing BitTorrent traffic source or dest port = 6881-6889​&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;example 2: Block outbound Web access, port=80.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;ACL: 규칙이 있는 테이블, 들어오는 패킷에 위에서 아래로 적용: (액션, 조건) pair&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;장점​
    &lt;ul&gt;
      &lt;li&gt;Simple : 동작방식이 직관적이며 간단, 구현용이​&lt;/li&gt;
      &lt;li&gt;Fast​&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;단점​
    &lt;ul&gt;
      &lt;li&gt;application layer protocol의 취약점공격에 차단 불가능​&lt;/li&gt;
      &lt;li&gt;사용자/application 별 서비스 제공불가능 ​&lt;/li&gt;
      &lt;li&gt;필터링시 사용 정보가 제한되어서 정교한 필터링 불가능​&lt;/li&gt;
      &lt;li&gt;IP주소 위변조 여부 판단 불가능&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
  &lt;li&gt;Statefull packet filter​&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
  &lt;li&gt;동일한 상태정보를 가지는 패킷들을(packet flow) 그룹으로 필터링​
    &lt;ul&gt;
      &lt;li&gt;상태정보: src IP/port, dst IP/port ​&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;장점​
    &lt;ul&gt;
      &lt;li&gt;정교한 필터링​&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;단점​
    &lt;ul&gt;
      &lt;li&gt;상태정보 테이블 검사수행에 따른 성능저하​&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
  &lt;li&gt;Application gateway&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;애플리케이션 데이터 및 IP/TCP/UDP 필드에서 패킷을 필터링한다&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;장점​
    &lt;ul&gt;
      &lt;li&gt;Application layer protocol 공격 차단​&lt;/li&gt;
      &lt;li&gt;사용자 인증가능​&lt;/li&gt;
      &lt;li&gt;정교한 Log, audit 가능​&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;단점​
    &lt;ul&gt;
      &lt;li&gt;응용 프로그램마다 다른 응용 프로그램 게이트웨이가 필요하다(텔넷, http, ftp, 이메일 …)&lt;/li&gt;
      &lt;li&gt;모든 데이터가 게이트웨이를 통과하기 때문에 성능이 저하됨&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;방화벽 및 게이트웨이의 한계&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;IP spoofing: 라우터는 데이터가 “실제로” 청구된 소스에서 오는지 알 수 없다&lt;/li&gt;
  &lt;li&gt;여러 앱의 경우. 특별한 대우가 필요하며 각각의 앱이 있다&lt;/li&gt;
  &lt;li&gt;클라이언트 소프트웨어는 게이트웨이에 접속하는 방법을 알아야 한다.
    &lt;ul&gt;
      &lt;li&gt;예를 들어, 웹 브라우저에서 프록시의 IP 주소를 설정해야 한다&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;내부 공격자 방어에 취약​&lt;/li&gt;
  &lt;li&gt;데이터 내용은 미확인 – 문서 등 내부에 심겨진 악성코드 방어 취약&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;</content>

      
      
      
      
      

      <author>
          <name>lee989898</name>
        
        
      </author>

      

      
        <category term="security" />
      

      
        <summary type="html">방화벽</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">__침입탐지__</title>
      <link href="https://lee989898.github.io/sc-16" rel="alternate" type="text/html" title="__침입탐지__" />
      <published>2021-11-24T01:06:00+09:00</published>
      <updated>2021-11-24T01:06:00+09:00</updated>
      <id>https://lee989898.github.io/sc-16</id>
      <content type="html" xml:base="https://lee989898.github.io/sc-16">&lt;h3 id=&quot;침입탐지&quot;&gt;&lt;strong&gt;침입탐지&lt;/strong&gt;&lt;/h3&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
  &lt;p&gt;IDS(침입탐지 시스템)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;침입탐지시스템​&lt;/li&gt;
  &lt;li&gt;침입행위에 대한 탐지를 수행하고 탐지시 대응할 수 있도록 지원하는 일련의 시스템​&lt;/li&gt;
  &lt;li&gt;Intrusion?​
    &lt;ul&gt;
      &lt;li&gt;시스템에 허가되지 않은 방법으로 내부 자원에 접근​&lt;/li&gt;
      &lt;li&gt;Login 시도 (ID, PWD 추측)​&lt;/li&gt;
      &lt;li&gt;불법적으로 데이터 도용시도 (rootkit)​&lt;/li&gt;
      &lt;li&gt;Root/관리자 권한 획득시도​&lt;/li&gt;
      &lt;li&gt;메일발송 실행파일을 숨겨놓고 메일전송시도​&lt;/li&gt;
      &lt;li&gt;Backdoor 접근시도&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;패킷 필터링
    &lt;ul&gt;
      &lt;li&gt;오직 TCP/IP 헤더만 본다&lt;/li&gt;
      &lt;li&gt;패킷 간의 연관성을 알아 내기 어렵다&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;IDS
    &lt;ul&gt;
      &lt;li&gt;depp packet inspection: 패킷 콘테츠 까지 검사한다&lt;/li&gt;
      &lt;li&gt;다수의 패킷을 검사한다
        &lt;ul&gt;
          &lt;li&gt;port scanning&lt;/li&gt;
          &lt;li&gt;network mapping&lt;/li&gt;
          &lt;li&gt;Dos attack&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;Dectection 방법&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ol&gt;
  &lt;li&gt;Signature-based dectection​
    &lt;ul&gt;
      &lt;li&gt;침입사건들을 패턴화(signature)​
    + Signature example​&lt;/li&gt;
      &lt;li&gt;실행 파일 첨부 메일 유형​&lt;/li&gt;
      &lt;li&gt;파일 읽기 시도 유형​&lt;/li&gt;
      &lt;li&gt;로그인 시도 유형​
    + 장점​&lt;/li&gt;
      &lt;li&gt;known attack에 대해 효율적​
    + 단점​&lt;/li&gt;
      &lt;li&gt;Unknown attack에 취약​&lt;/li&gt;
      &lt;li&gt;새로운 공격유형 발견때마다 signature 생성해야​&lt;/li&gt;
      &lt;li&gt;일반적으로 False negative rate 높음&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Anomaly-based dectection​
    &lt;ul&gt;
      &lt;li&gt;정상범위를 벗어나는 사건을 탐지​
    + Anomaly example​&lt;/li&gt;
      &lt;li&gt;휴일에 traffic 량이 평소보다 20%증가​&lt;/li&gt;
      &lt;li&gt;일반사용자가 갑자기 1000통 메일발송​&lt;/li&gt;
      &lt;li&gt;특정 호스트에 단시간 주문요청 100%증가​&lt;/li&gt;
      &lt;li&gt;국내 사용자 카드가 해외에서 결재​
    + 장점​&lt;/li&gt;
      &lt;li&gt;Machine learning 처리​&lt;/li&gt;
      &lt;li&gt;Unknown attac에 대해 효율적​
    + 단점​&lt;/li&gt;
      &lt;li&gt;정상범위 정의 어려움​&lt;/li&gt;
      &lt;li&gt;비정상탐지까지 기다려야​&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
  &lt;p&gt;IDS types&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ol&gt;
  &lt;li&gt;Network-based IDS​&lt;/li&gt;
  &lt;li&gt;Wireless IDS (wireless IDS)​&lt;/li&gt;
  &lt;li&gt;Host-based IDS​&lt;/li&gt;
  &lt;li&gt;Distributed Host-based IDS&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
  &lt;p&gt;Network-based IDS​&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;Example​
    &lt;ul&gt;
      &lt;li&gt;Network 망에 곳곳에 traffic을 모니터, 분석하여 침입탐지​&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Example​
    &lt;ul&gt;
      &lt;li&gt;Ddos, worm  ​&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;장점 ​
    &lt;ul&gt;
      &lt;li&gt;Host는 부하적음 (하나의  NIDS로 여러 host보호)​&lt;/li&gt;
      &lt;li&gt;조기 탐지가능​&lt;/li&gt;
      &lt;li&gt;취약한 부분의 packet 을 정밀분석하여 다양한 침입탐지 ​&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;단점​
    &lt;ul&gt;
      &lt;li&gt;각 host 내부는 탐지제한​&lt;/li&gt;
      &lt;li&gt;전체 network 망에 부하&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;Wireless IDS (wireless IDS)​&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;무선통신 WLAN network망의 traffic 분석​&lt;/li&gt;
  &lt;li&gt;장점​
    &lt;ul&gt;
      &lt;li&gt;무선통신의 취약성위협 탐지​&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;단점​
    &lt;ul&gt;
      &lt;li&gt;Network 부하, 비용&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;Host-based IDS​&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;특정 host 컴퓨터내부를 모니터링, 분석하여 탐지​&lt;/li&gt;
  &lt;li&gt;Example​
    &lt;ul&gt;
      &lt;li&gt;로그분석, 파일시스템 기록분석, 실행코드분석 ​&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;장점​
    &lt;ul&gt;
      &lt;li&gt;악성sw 탐지용이​&lt;/li&gt;
      &lt;li&gt;내부공격자 탐지​&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;단점​
    &lt;ul&gt;
      &lt;li&gt;각 host마다 다름​&lt;/li&gt;
      &lt;li&gt;Host 부하&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;Distributed Host-based IDS&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;여러 HIDS들이 연계하여 전체적으로 host들을 분석하여 탐지 ​&lt;/li&gt;
  &lt;li&gt;장점​
    &lt;ul&gt;
      &lt;li&gt;효율적이고 정확성​&lt;/li&gt;
      &lt;li&gt;공격들의 연관관계 파악용이​&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;단점​
    &lt;ul&gt;
      &lt;li&gt;HIDS보다 복잡, 부담&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;Honey Pot&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;꿀단지​&lt;/li&gt;
  &lt;li&gt;의도적으로 해커의 침입을 유도하는 시스템​&lt;/li&gt;
  &lt;li&gt;해커 정보수집, 공격유형파악, 대응전략수립, 법적증거 ​&lt;/li&gt;
  &lt;li&gt;침입자 활동감시, 로그기록&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;IDS 평가 기준&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;False Positive rate​
    &lt;ul&gt;
      &lt;li&gt;정상을 침입으로 판단하는 확률​&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;False Negative​
    &lt;ul&gt;
      &lt;li&gt;침입을 정상으로 판단하는 확률​&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;True Positive rate​&lt;/li&gt;
  &lt;li&gt;True Negative rate​&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;IPS (Intrusion Prevention System)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;침입방지시스템​&lt;/li&gt;
  &lt;li&gt;IDS+침입방지기능​&lt;/li&gt;
  &lt;li&gt;Example​
    &lt;ul&gt;
      &lt;li&gt;IDS로 침입탐지하고 계정, 연결 등 차단​&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;</content>

      
      
      
      
      

      <author>
          <name>lee989898</name>
        
        
      </author>

      

      
        <category term="security" />
      

      
        <summary type="html">침입탐지</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">__Diffie-Hellman__</title>
      <link href="https://lee989898.github.io/sc-14" rel="alternate" type="text/html" title="__Diffie-Hellman__" />
      <published>2021-11-17T01:06:00+09:00</published>
      <updated>2021-11-17T01:06:00+09:00</updated>
      <id>https://lee989898.github.io/sc-14</id>
      <content type="html" xml:base="https://lee989898.github.io/sc-14">&lt;h3 id=&quot;diffie-hellman&quot;&gt;&lt;strong&gt;Diffie-Hellman&lt;/strong&gt;&lt;/h3&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
  &lt;p&gt;Diffie-Hellman&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;보안성 없는 매체를 통한 Symmetric key 공유&lt;/li&gt;
  &lt;li&gt;송/수신자를 위한 일회용 Secret/shared session key agreement protocol&lt;/li&gt;
  &lt;li&gt;이산대수문제&lt;/li&gt;
  &lt;li&gt;IPSEC, 상용sw에 자주 사용&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;Steps&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;p,g: 큰 정수, 1 &amp;lt; q &amp;lt; p, 모든 사용자에 공개&lt;/li&gt;
  &lt;li&gt;Alice는 임의로 a 생성, A = $g^a$ mod p 계산&lt;/li&gt;
  &lt;li&gt;Bob은 임의로 b 생성, B = $g^b$ mod p 계산&lt;/li&gt;
  &lt;li&gt;A,B를 서로 교환&lt;/li&gt;
  &lt;li&gt;Alice와 Bob은 K=$g^{ab}$ mod p&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;Deiffie-Hellman의 취약성: 중간자 공격&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;Man in the middle attack: Trudy poses as Alice and as Bob
    &lt;ul&gt;
      &lt;li&gt;Diffe-Hellman은 매우 복잡한 프로토콜이지만, 제 3자가 x 또는 y 값을 알아내지 않아도 되기 때문에 중간에서 밥과 앨리스를 속이는 것이 가능하다.​&lt;/li&gt;
      &lt;li&gt;중간자 공격 절차​
        &lt;ol&gt;
          &lt;li&gt;앨리스가 x를 선택한 후 R1=Gx를 계산하여 R1을 밥에게 전송​&lt;/li&gt;
          &lt;li&gt;제 3자가 R1을 가로챈 후, z를 선택한 다음 R2=Gz mod N을 계산하여 R2를 앨리스와 밥에게 전송​&lt;/li&gt;
          &lt;li&gt;밥이 y를 선택한 다음 R3=Gy mod N을 계산해서 R3을 앨리스에게 전송, R3을 제 3자가 가로챔​&lt;/li&gt;
          &lt;li&gt;앨리스와 제 3자가 공유한 키 K1=Gxz mod N을 계산​&lt;/li&gt;
          &lt;li&gt;제 3자와 밥은 공유한 키 K2=Gzy mod N을 계산​&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
      &lt;li&gt;경우 앨리스와 밥은 제 3자와 공유한 키를 서로간의 공유한 키로 생각​&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;사용자 인증을 하지 않아서 발생하는 문제 -&amp;gt; 전자서명, 인증서&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;</content>

      
      
      
      
      

      <author>
          <name>lee989898</name>
        
        
      </author>

      

      
        <category term="security" />
      

      
        <summary type="html">Diffie-Hellman</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">__DRM(Digital Right Managemment__</title>
      <link href="https://lee989898.github.io/sc-15" rel="alternate" type="text/html" title="__DRM(Digital Right Managemment__" />
      <published>2021-11-17T01:06:00+09:00</published>
      <updated>2021-11-17T01:06:00+09:00</updated>
      <id>https://lee989898.github.io/sc-15</id>
      <content type="html" xml:base="https://lee989898.github.io/sc-15">&lt;h3 id=&quot;drmdigital-right-managemment&quot;&gt;&lt;strong&gt;DRM(Digital Right Managemment&lt;/strong&gt;&lt;/h3&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
  &lt;p&gt;DRM&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;digital 저작권 관리&lt;/li&gt;
  &lt;li&gt;Digital contents의 불법 사용을 제한/방지하고, 저작권을 보고하기 위한 기술 및 서비스&lt;/li&gt;
  &lt;li&gt;Digital contents
    &lt;ul&gt;
      &lt;li&gt;audio,video,image,text,multimedia,sw 등&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;저작권이란&lt;/li&gt;
  &lt;li&gt;Copyright&lt;/li&gt;
  &lt;li&gt;저작자가 자신이 창작한 저작물에 대해 갖는 권리(저작권법)
    &lt;ol&gt;
      &lt;li&gt;복제권: 저작자는 저작물을 복제할 권리를 갖는다&lt;/li&gt;
      &lt;li&gt;공연권&lt;/li&gt;
      &lt;li&gt;공중송신권&lt;/li&gt;
      &lt;li&gt;전시권: 원본이나 복제물을 전시할 권리&lt;/li&gt;
      &lt;li&gt;배포권: 원본이나 복제물을 배포. 다만, 저작자의 허락을 받아 판매등의 방법으로 거래에 제공된 경우는 제외&lt;/li&gt;
      &lt;li&gt;대여권: 영리를 목적으로 대여할 권리&lt;/li&gt;
      &lt;li&gt;2차적 저작물작성권: 원저작물로 하는 2차적저작물을 작성하여 이용할 권리&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;Common DRM business model&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;Provider
    &lt;ul&gt;
      &lt;li&gt;저자물(권) 소유&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Distributor
    &lt;ul&gt;
      &lt;li&gt;유통을 담당하는 배급자&lt;/li&gt;
      &lt;li&gt;합법적인 소비자에게만 제공해야&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Clearinghouse
    &lt;ul&gt;
      &lt;li&gt;디지털 상품에 대한 권리발급&lt;/li&gt;
      &lt;li&gt;배급료, 사용료 처리 (Log기록)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Consumer
    &lt;ul&gt;
      &lt;li&gt;Clearinghouse에 사용료지급하고  distributor로부터 컨텐츠제공받음&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;주요기술 1: Stegano graphy(숨겨진 글)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;평범해 보이는 미디어에 내용을 아는 수신자만 알아볼 수 있도록 은밀히 정보를 숨기는 기술&lt;/li&gt;
  &lt;li&gt;암호화알고리즘이 안전하지 않을 때 유용&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;주요기술 2: Watermark&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;빛을 비출때나 반사될 때 더 밝게 보이는, 인지할 수 있는 종이의 무늬나 그림&lt;/li&gt;
  &lt;li&gt;지폐, 상표, 문서 등의 위조 방지에 많이 사용된다&lt;/li&gt;
  &lt;li&gt;Digital watermarking
    &lt;ul&gt;
      &lt;li&gt;Text, image, video, audio 등의 원본 데이터에 본래 소유주만이 아는 mark를 사람의 감각으로 식별할 수 없게 삽입하는 기술&lt;/li&gt;
      &lt;li&gt;일부 digital data가 손상되더라도 인간은 감지할 수 없음&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;복제방지, 원본여부, 재생횟수제한, 유효기간설정, 시간제한 등에 활용&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;</content>

      
      
      
      
      

      <author>
          <name>lee989898</name>
        
        
      </author>

      

      
        <category term="security" />
      

      
        <summary type="html">DRM(Digital Right Managemment</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Key Management (KDC &amp;amp; CA)</title>
      <link href="https://lee989898.github.io/sc-13" rel="alternate" type="text/html" title="Key Management (KDC &amp; CA)" />
      <published>2021-11-11T01:06:00+09:00</published>
      <updated>2021-11-11T01:06:00+09:00</updated>
      <id>https://lee989898.github.io/sc-13</id>
      <content type="html" xml:base="https://lee989898.github.io/sc-13">&lt;h3 id=&quot;key-management-kdc--ca&quot;&gt;&lt;strong&gt;Key Management (KDC &amp;amp; CA)&lt;/strong&gt;&lt;/h3&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
  &lt;p&gt;Session Key&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;Session: 회기, 입회기간&lt;/li&gt;
  &lt;li&gt;통신 seesion이 시작될 때 생성되서 종료될때 폐기되는 동적 대칭키&lt;/li&gt;
  &lt;li&gt;통신 session마다 다른 키를 사용하면 안전&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;다중사용자가 세션키사용 할 경우&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;2명의 사용자 간에 1개의 비밀키 사용&lt;/li&gt;
  &lt;li&gt;3명의 사용자 간에 3개의 비밀키 사용&lt;/li&gt;
  &lt;li&gt;사용자 1명 추가 시 3개의 비밀키가 추가로 필요&lt;/li&gt;
  &lt;li&gt;n명이면 n(n-1)/2 만큼의 키가 필요&lt;/li&gt;
  &lt;li&gt;대칭키 유지 및 관리 부하&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
  &lt;p&gt;KDC (Key Distribution Centre)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;중앙의 신뢰할 수 있는 키관리, 분배 책임주체&lt;/li&gt;
  &lt;li&gt;사용자들은 KDC 등록신청하면, KDC가 각 사용자들과 비밀키를 공유&lt;/li&gt;
  &lt;li&gt;각 사용자는 이 키를 사용하여 KDC와 통신한다&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/built/images/sc/sc23.png&quot; width=&quot;50%&quot; height=&quot;25%&quot; title=&quot;제목&quot; alt=&quot;컴퓨터보안&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Operation&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;Alice와 Bob은 KDC와의 통신을 위한 $K_{A-KDC}$, $K_{B-KDC}$ 를 알고 있다. Alice는 KDC와 통신하여 세션키 R1 과 $K_{B-KDC}$(A,R1)을 얻는다.
Alice는 Bob에게 $K_{B-KDC}$(A,R1)을 보내고 Bob은 R1을 추출해낸다&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;KDC 장단점&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;KDC의 장점
    &lt;ul&gt;
      &lt;li&gt;비밀키 방식은 비교적 속도가 빠름&lt;/li&gt;
      &lt;li&gt;서버를 사용하지 않는 경우보다 키 관리를 쉽게 해줌&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;KDC의 단점
    &lt;ul&gt;
      &lt;li&gt;단일 실패 지점 (SPoF, Single Point of Failure)
        &lt;ul&gt;
          &lt;li&gt;KDC가 고장나면 전혀 서비스를 할 수 없음&lt;/li&gt;
          &lt;li&gt;해결책: 미러 서버 가동
            &lt;ul&gt;
              &lt;li&gt;서버와 미러간의 일관성 문제 발생 가능&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;+KDC가 공격되면 모든 비밀키가 노출될 수 있음&lt;/li&gt;
      &lt;li&gt;KDC의 신뢰성이 매우 중요함&lt;/li&gt;
      &lt;li&gt;KDC에 대한 병목현상 발생&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;Hierarchical Key Control&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;단일 KDC는 대규모 네트워크에서 비효율적&lt;/li&gt;
  &lt;li&gt;KDC를 계층화
    &lt;ul&gt;
      &lt;li&gt;local KDC
        &lt;ul&gt;
          &lt;li&gt;single LAN or building&lt;/li&gt;
          &lt;li&gt;같은 domain 에서의 통신시 키 분배&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;global KDC
        &lt;ul&gt;
          &lt;li&gt;다른 domain 간의 통신시 키 선택&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;KDC의 손상시 지역에 한정&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
  &lt;p&gt;CA (Certification Authorities)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;for public key cryptography&lt;/li&gt;
  &lt;li&gt;전자서명을 위해선 신뢰성 있는 공개키 보관장소 필요 해커가 다른 사용자의 공개키를 자기것인 척 하는 것을 방지&lt;/li&gt;
  &lt;li&gt;공인인증서의 발급과 관리하는 기관&lt;/li&gt;
  &lt;li&gt;Role
    &lt;ul&gt;
      &lt;li&gt;사용자들의 공개키를 저장하고 관리&lt;/li&gt;
      &lt;li&gt;사용자들이 요청시 해당 공개키를 서명해서 전송(public key certificate, 공개키 인증서)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;Operation&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;Bob은 CA에 공개 키를 등록한다
    &lt;ul&gt;
      &lt;li&gt;Bob은 CA에 신원증멸 을 제공한다&lt;/li&gt;
      &lt;li&gt;CA는 Bob을 공개 키에 바인딩하는 인증서를 생성한다&lt;/li&gt;
      &lt;li&gt;CA가 디지털 서명한 Bob의 공개 키를 포함하는 인증서: CA는 “이것은 B의 공개 키이다”&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Alice가 Bob의 공개 키를 원할 때:
    &lt;ul&gt;
      &lt;li&gt;Bob의 인증서를 얻는다.&lt;/li&gt;
      &lt;li&gt;CA의 공개 키를 Bob의 인증서에 적용하고 Bob의 공개 키를 가져온다&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;공개키 인증서 (공인인증서, Public Key Certificate)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;특정 공개키가 해당 사용자의 공개키임을 신뢰할수있는 기관에서 보증하는 문서 -&amp;gt; 사용자 인증&lt;/li&gt;
  &lt;li&gt;사용자 공개키에 공인인증기관의 전자서명을 첨부한 것&lt;/li&gt;
  &lt;li&gt;4요소
    &lt;ul&gt;
      &lt;li&gt;공개키인증서: 공개키가 누구것인지, 대칭되는 비밀키는 누가 갖고있는지&lt;/li&gt;
      &lt;li&gt;인증서정책: 인증서 사용방식&lt;/li&gt;
      &lt;li&gt;인증서경로: 인증서를 연결하는 방식&lt;/li&gt;
      &lt;li&gt;인증서 철회리스트: 유효성확인&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
  &lt;p&gt;공개키 기반구조 (PKI, Public key Infrastructure)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;정의​
    &lt;ul&gt;
      &lt;li&gt;공개키 방식을 통해 암호화 및 전자서명/인증서의 사용을 가능하도록 해주는 기반구조로 X.509(표준), PGP, AADS/X9.59 등 있다​&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;​구성 요소​
    &lt;ul&gt;
      &lt;li&gt;사용자 : 개인이나 기관 또는 응용 서비스​&lt;/li&gt;
      &lt;li&gt;인증기관(CA) : 공개키 인증서발급 및 관리​&lt;/li&gt;
      &lt;li&gt;등록기관(registration authority: RA): 사용자 인증서 신청시 인증기관대신 신분확인​&lt;/li&gt;
      &lt;li&gt;저장소(repository): 인증서,사용자정보,인증서취소,상호인증서 등을 저장 검색​&lt;/li&gt;
      &lt;li&gt;인증서정책(policy): 권한, 사용범위 정의​&lt;/li&gt;
      &lt;li&gt;공개키인증서​&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;국내 인증기관(CA)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;전자서명법​
    &lt;ul&gt;
      &lt;li&gt;공인인증서: 전자서명을 생성하기 위하여 이용된 정보가 가입자에게 유일하게 속한다는 사실등을 확인하고 증명하는 전자정보. 이름, 유효기관, 발급기관, 전자서명방식, 인증번호등 포함​&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;공인인증기관(CA) : 공인인증서의 발급과 관리를 담당하는 기관으로 금융결제원, 한국정보인증, 한국증권전산, 한국전자인증, 한국전산원, 한국무역정보통신, 코스콤​&lt;/li&gt;
  &lt;li&gt;주요역할​
    &lt;ul&gt;
      &lt;li&gt;공개키와 비밀키 생성, 인증서 발급/폐지​&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;등록기관(RA, Registration Authority)​&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;인증기관의 위임을 받아 사용자가 신청시 신원확인 및 공개키 생성/등록을 수행&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;국내 공인 인증서 발급절차​&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;발급기관(CA or RA)에 공인인증서 발급신청(직접방문, 신분증제출)​&lt;/li&gt;
  &lt;li&gt;발급기관에서 등록확인서 발급 (참조번호, 인가코드)​&lt;/li&gt;
  &lt;li&gt;발급기관 홈페이지접속해서 공인인증서 발급 신청​&lt;/li&gt;
  &lt;li&gt;공인인증서 파일이 발급​&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;</content>

      
      
      
      
      

      <author>
          <name>lee989898</name>
        
        
      </author>

      

      
        <category term="security" />
      

      
        <summary type="html">Key Management (KDC &amp;amp; CA)</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">접근 제어</title>
      <link href="https://lee989898.github.io/sc-12" rel="alternate" type="text/html" title="접근 제어" />
      <published>2021-11-04T01:06:00+09:00</published>
      <updated>2021-11-04T01:06:00+09:00</updated>
      <id>https://lee989898.github.io/sc-12</id>
      <content type="html" xml:base="https://lee989898.github.io/sc-12">&lt;h3 id=&quot;접근-제어&quot;&gt;&lt;strong&gt;접근 제어&lt;/strong&gt;&lt;/h3&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
  &lt;p&gt;Access Control&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;허가되지 않은 사용자의 자원 접근 막는다&lt;/li&gt;
  &lt;li&gt;정당한 사용자라도 허가되지 않은 방법으로 자원사용 하는 것을 막는다&lt;/li&gt;
  &lt;li&gt;정당한 사용자가 허가된 방식으로만 자원에 접근하도록 한다&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;Access control components&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;/assets/built/images/sc/sc17.png&quot; width=&quot;50%&quot; height=&quot;25%&quot; title=&quot;제목&quot; alt=&quot;컴퓨터보안&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Authentication function: 사용자가 시스템에 접근할 수 있는지 결정&lt;/li&gt;
  &lt;li&gt;Access control function: 사용자의 요청이 허용되는지 결정&lt;/li&gt;
  &lt;li&gt;Security admin: 사용자의 요청이 자원에 어떻게 접근하는지를 명시한 권한 DB를 관리&lt;/li&gt;
  &lt;li&gt;Audit: 사용자가 시스템 자원에 접근하는 것을 기록, 감시&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;Access control architecture&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;/assets/built/images/sc/sc18.png&quot; width=&quot;50%&quot; height=&quot;25%&quot; title=&quot;제목&quot; alt=&quot;컴퓨터보안&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Access Control Policy&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;접근 제어 정책&lt;/li&gt;
  &lt;li&gt;어떤 상황에서, 누구에게 어떤 종류의 접근이 허용되는지를 결정&lt;/li&gt;
  &lt;li&gt;권한 DB에 저장되며 보안 admin이 관리&lt;/li&gt;
  &lt;li&gt;종류 (동시에 사용가능)
    &lt;ul&gt;
      &lt;li&gt;Discretinoary access control(DAC)&lt;/li&gt;
      &lt;li&gt;Mandatory access control(MAC)&lt;/li&gt;
      &lt;li&gt;Role-based access control(RBAC)&lt;/li&gt;
      &lt;li&gt;Attribute-based access control(ABAC)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;Discretinoary access control(DAC)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;임의 접근 제어&lt;/li&gt;
  &lt;li&gt;요청자의 신분에 따라 무엇을 할 수 있는지 정의&lt;/li&gt;
  &lt;li&gt;Window, unix 등 컴퓨터 시스템 널리 사용&lt;/li&gt;
  &lt;li&gt;Access Matrix 사용
    &lt;ul&gt;
      &lt;li&gt;주체와 객체, 권한을 행렬로 표현&lt;/li&gt;
      &lt;li&gt;행: 자원접근 주체, subject&lt;/li&gt;
      &lt;li&gt;열: subject가 접근하는 대상자원, object&lt;/li&gt;
      &lt;li&gt;Entry: 허용되는 접근&lt;/li&gt;
      &lt;li&gt;-Matrix가 커질 수 있고, 희박해지면 메모리 낭비&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/built/images/sc/sc19.png&quot; width=&quot;50%&quot; height=&quot;25%&quot; title=&quot;제목&quot; alt=&quot;컴퓨터보안&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;방법1. ACL - Access control lists
    &lt;ul&gt;
      &lt;li&gt;Access matrix를 열로 분리&lt;/li&gt;
      &lt;li&gt;객체에 대한 권한을 가진 주체 파악에 유리&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/built/images/sc/sc20.png&quot; width=&quot;50%&quot; height=&quot;25%&quot; title=&quot;제목&quot; alt=&quot;컴퓨터보안&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;방법2. Capablility tickets
    &lt;ul&gt;
      &lt;li&gt;Access matrix 행으로 분리&lt;/li&gt;
      &lt;li&gt;특정 주체에 대해 승인된 객체와 권한 명시&lt;/li&gt;
      &lt;li&gt;특정 사용자에 허가된 객체/권한들을 정리하기 쉬움&lt;/li&gt;
      &lt;li&gt;다른 주체에서 티켓을 빌려 주거나 양도 -&amp;gt; 보안문제 발생&lt;/li&gt;
      &lt;li&gt;티켓 무결성, 기밀성, 인증성&lt;/li&gt;
      &lt;li&gt;OS가 관리&lt;/li&gt;
      &lt;li&gt;분산, Cloud 환경에 적합&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/built/images/sc/sc21.png&quot; width=&quot;50%&quot; height=&quot;25%&quot; title=&quot;제목&quot; alt=&quot;컴퓨터보안&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;방법 3. authorization table
    &lt;ul&gt;
      &lt;li&gt;한 행에 한 주제의 한 자원에 대한 권한명시&lt;/li&gt;
      &lt;li&gt;RDB로 구현 용이&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/built/images/sc/sc22.png&quot; width=&quot;50%&quot; height=&quot;25%&quot; title=&quot;제목&quot; alt=&quot;컴퓨터보안&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;DAC 장단점 분석
    &lt;ul&gt;
      &lt;li&gt;장점
        &lt;ul&gt;
          &lt;li&gt;객체별 세분화된 접근 제어가능&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;단점
        &lt;ul&gt;
          &lt;li&gt;Access Matrix 사용에 따른 메모리 낭비&lt;/li&gt;
          &lt;li&gt;주체나 객체별로 제어하기 때문에, 전체 자원의 일관성 있는 제어 어려움&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;Role-based access control (RBAC)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;각 사용자 대신에 역할에 접근 권할을 할당&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;상업적으로 회사,기관,조직에서 많이 쓰임&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;사용자 vs 역할 vs 자원의 관계는 다대다&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;관계는 동적이다&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;RBAC 장단점 분석
    &lt;ul&gt;
      &lt;li&gt;장점
        &lt;ul&gt;
          &lt;li&gt;전체적으로 일관성있는 제어정책가능&lt;/li&gt;
          &lt;li&gt;직무분석 용이&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;단점
        &lt;ul&gt;
          &lt;li&gt;각 주체, 객체별 유연하게 하기 어려움&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;Attribute-based access control(ABAC)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;가장 최근&lt;/li&gt;
  &lt;li&gt;주체와 자원의 속성을 표현&lt;/li&gt;
  &lt;li&gt;DAC, RBAC의 기본개념 실형가능&lt;/li&gt;
  &lt;li&gt;유연성과 표현력이 우수&lt;/li&gt;
  &lt;li&gt;3요소 - 속성, 정책 모델, 아키텍처 모델&lt;/li&gt;
  &lt;li&gt;+유연하고 세분화 보안정책 설계&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;-설계자 과다업무, 비용&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;속성
    &lt;ul&gt;
      &lt;li&gt;주체, 객체, 환경, 권한에 의해 미리 정의되고 할당된 요구되는 동작의 특정 측면을 정의하는 성질​&lt;/li&gt;
      &lt;li&gt;주체 속성​
        &lt;ul&gt;
          &lt;li&gt;주체는 정보가 객체사이에 이동하거나 시스템 상태를 변경하는 능동적 존재(User, application, process, device)​&lt;/li&gt;
          &lt;li&gt;주체의 이름, 소속, 직책 등​&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;객체 속성​
        &lt;ul&gt;
          &lt;li&gt;정보를 포함하거나 받는 수동적 시스템 존재 (file, device, table, record, process, program, network)​&lt;/li&gt;
          &lt;li&gt;MS Word문서는 이름, 저자, 날짜 등을 속성으로 가짐​&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;환경 속성​
        &lt;ul&gt;
          &lt;li&gt;운영, 기술, 상황, 환경 기술​&lt;/li&gt;
          &lt;li&gt;현재 날짜, 시간, 네트워크 보안 레벨&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;</content>

      
      
      
      
      

      <author>
          <name>lee989898</name>
        
        
      </author>

      

      
        <category term="security" />
      

      
        <summary type="html">접근 제어</summary>
      

      
      
    </entry>
  
</feed>
