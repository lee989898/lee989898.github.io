<?xml version="1.0" encoding="utf-8"?>

<feed xmlns="http://www.w3.org/2005/Atom" >
  <generator uri="https://jekyllrb.com/" version="3.9.0">Jekyll</generator>
  <link href="https://lee989898.github.io/tag/git/feed.xml" rel="self" type="application/atom+xml" />
  <link href="https://lee989898.github.io/" rel="alternate" type="text/html" />
  <updated>2021-10-25T18:48:50+09:00</updated>
  <id>https://lee989898.github.io/tag/git/feed.xml</id>

  
  
  

  
    <title type="html">LEE | </title>
  

  
    <subtitle>공부 블로그</subtitle>
  

  

  
    
      
    
  

  
  

  
    <entry>
      <title type="html">Git 기초 명령어</title>
      <link href="https://lee989898.github.io/git-01" rel="alternate" type="text/html" title="Git 기초 명령어" />
      <published>2021-08-02T01:06:00+09:00</published>
      <updated>2021-08-02T01:06:00+09:00</updated>
      <id>https://lee989898.github.io/git-01</id>
      <content type="html" xml:base="https://lee989898.github.io/git-01">&lt;blockquote&gt;
  &lt;p&gt;git –version&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;결과&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;git config –global init.defaultBranch main&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;git config –global user.name “name” 
앞으로 이컴퓨터에서 깃으로 관리하는 프로젝트는 모두 다 이유저네임
으로 한다는 뜻이다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;git config –global user.email “email”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;git config –list
제대로 되었는지 확인&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;git init 
.git 폴더 생성
.git 폴더가 생성된 폴더는 git이 관리하기 시작함.
최초 1회만 해주면 된다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;git add .
모든 파일 스테이징(말이 어렵지만 추적을 시작한다라고 보시면 됩니다.)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;git commit -m “message”
message 이름으로 현재 추적하고 있는 코드들을 ‘찰칵’&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;git log
커밋 로그를 확인&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;git status
현재 git 상태 보여줌&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;git reset – hard 커밋코드
커밋 번호에 해당하는 커밋으로 코드를 롤백&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;git remote add origin 리포지토리 주소
리포지토리와 내 로컬 폴더를 연결한다. (이게 없으면 깃과 깃허브는 만ㅇ날 수 없다)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;git push origin main
깃허브 리포지토리 메인 브랜치에 현재 커밋들을 넣는다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;git clone 리포지토리 주소
깃허브 리포지토리에서 모든 커밋들을 내 로커로 가져온다&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;git pull origin main
서버에서 변경사항이 일어난 것을 로컬로 동기화한다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;git init -&amp;gt;gid add -&amp;gt; git commit -&amp;gt; 리포지토리만들기 -&amp;gt; git remote add origin 리포지토리 주소 -&amp;gt; git push origin main&lt;/p&gt;

&lt;p&gt;리포지토리만들기 -&amp;gt; git clone 리포지토리주소 -&amp;gt; 필요한 폴더 넣기-&amp;gt; git add . -&amp;gt; git commit -&amp;gt;  -&amp;gt; git push origin maijn&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;.gitingnore
txt 파일로 만들어서 확장자 없애기 
*.exe 로 하면 exe는 커밋 및 올리지마
하지만 매번 하면 귀찮gitignore.io사이트에서 활용하면 좋음&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;git branch
현재 생성되어있는 브랜치의 목록을 본다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;git branch newFeature
new Fragute이라는 새로운 브랜치를 만든다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;git checkout newFeaute
이라는 브랜치로 이동한다&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;git branch -D newfraure
이라는 브랜치를 삭제한다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;git push origin 브랜치이름
특정 브랜치를 깃허브에 푸시한다&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;git pull origin 브랜치이름&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;브랜치를 깃허브에서 가져와서 최신화한다.&lt;/p&gt;

&lt;hr /&gt;</content>

      
      
      
      
      

      <author>
          <name>lee989898</name>
        
        
      </author>

      

      
        <category term="git" />
      

      
        <summary type="html">git –version</summary>
      

      
      
    </entry>
  
</feed>
